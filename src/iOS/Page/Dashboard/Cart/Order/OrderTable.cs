// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using Core.Models.DAL;
using Core.ViewModels.Beer;
using Foundation;
using Int.Core.Wrappers.Widget.CrossViewInjection;
using Int.iOS;
using Int.iOS.Factories.Adapter;
using iOS.Helpers;
using iOS.Page.BasePage;
using UIKit;
using static Core.ViewModels.Beer.Order.BaseOrderViewModel;

namespace iOS.Storyboard
{
    public partial class OrderTable : BasePageNavigation<OrderTableViewModel>
    {
        public OrderTable(IntPtr handle) : base(handle) { }

        private Action<string> Result { get; set; }

        protected override void BindViews()
        {
            base.BindViews();

            var source = ComponentViewSourceFactory.CreateForTable(nameof(OrderTableCell),
                                                                   new List<IOrderContent>(),
                                                         TableView,
                                                                   crossCellModel: new OrderListBaseCell(ModelView));
            TableView.Source = source;

            ModelView.GetPayment -= ModelView_GetPayment;
            ModelView.GetPayment += ModelView_GetPayment;
        }

        private void Payment()
        {
            AppTools.InvokeOnMainThread(() =>
            {
                PPHelper.Buy((state, res) =>
                {
                    switch (state)
                    {
                        case (PPHelper.State.Succefull):
                            OnSuccesPay(res);
                            break;
                        case (PPHelper.State.UserCancel):
                            //OnCancelPay();
                            break;
                        default:
                            OnFailedPay();
                            break;
                    }
                });
            });
        }

        private void ModelView_GetPayment(Action<string> arg)
        {
            Payment();
            Result = arg;
        }

        #region PayPalResponseHandlers

        private void OnSuccesPay(NSDictionary paymentData)
        {
            Result?.Invoke(PPHelper.GetPaymentIdFromConfirmationResponse(paymentData));
        }

        private void OnCancelPay() => ShowError("Payment cancelled");

        private void OnFailedPay() => ShowError("Payment failed");

        #endregion
    }

    partial class OrderTable
    {
        [CrossView(nameof(OrderTableViewModel.ListView))]
        UITableView view1 => TableView;

        [CrossView(nameof(OrderTableViewModel.BackroundContent))]
        UIView view2 => viewContent;

        [CrossView(nameof(OrderTableViewModel.OrderBackround))]
        UIView view3 => viewTableNr;

        [CrossView(nameof(OrderTableViewModel.ConfirmText))]
        UILabel view4 => lblConfirm;

        [CrossView(nameof(OrderTableViewModel.TableNrText))]
        UILabel view5 => lblTableNr;

        [CrossView(nameof(OrderTableViewModel.TableNrValueText))]
        UILabel view6 => lblTableNrValue;

        [CrossView(nameof(OrderTableViewModel.ChangeText))]
        UILabel view7 => lblChangeText;

        [CrossView(nameof(OrderTableViewModel.ChangeImage))]
        UIImageView view8 => imgChangeTable;

        [CrossView(nameof(OrderTableViewModel.BackroundChange))]
        UIView view9 => viewTouchAreChange;
    }
}
